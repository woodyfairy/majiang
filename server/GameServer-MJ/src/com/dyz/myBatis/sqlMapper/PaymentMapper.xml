<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dyz.myBatis.dao.PaymentMapper">
  <resultMap id="BaseResultMap" type="com.dyz.myBatis.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="orderNum" jdbcType="VARCHAR" property="ordernum" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="ticket" jdbcType="VARCHAR" property="ticket" />
    <result column="finished" jdbcType="BIT" property="finished" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    orderNum, uid, num, price, date, ticket, finished
  </sql>
  <select id="selectByExample" parameterType="com.dyz.myBatis.model.PaymentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from payment
    where orderNum = #{ordernum,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from payment
    where orderNum = #{ordernum,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dyz.myBatis.model.PaymentExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dyz.myBatis.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into payment (orderNum, uid, num, 
      price, date, ticket, 
      finished)
    values (#{ordernum,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP}, #{ticket,jdbcType=VARCHAR}, 
      #{finished,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.dyz.myBatis.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ordernum != null">
        orderNum,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="ticket != null">
        ticket,
      </if>
      <if test="finished != null">
        finished,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ordernum != null">
        #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="ticket != null">
        #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="finished != null">
        #{finished,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dyz.myBatis.model.PaymentExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment
    <set>
      <if test="record.ordernum != null">
        orderNum = #{record.ordernum,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticket != null">
        ticket = #{record.ticket,jdbcType=VARCHAR},
      </if>
      <if test="record.finished != null">
        finished = #{record.finished,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment
    set orderNum = #{record.ordernum,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      ticket = #{record.ticket,jdbcType=VARCHAR},
      finished = #{record.finished,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dyz.myBatis.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="ticket != null">
        ticket = #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="finished != null">
        finished = #{finished,jdbcType=BIT},
      </if>
    </set>
    where orderNum = #{ordernum,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dyz.myBatis.model.Payment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update payment
    set uid = #{uid,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      ticket = #{ticket,jdbcType=VARCHAR},
      finished = #{finished,jdbcType=BIT}
    where orderNum = #{ordernum,jdbcType=VARCHAR}
  </update>
</mapper>